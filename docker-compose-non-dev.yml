x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  db:
    env_file: docker/.env-non-dev
    image: postgres:14
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '512M'

  postgres-data:
    image: postgres:latest
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
      - ./data_mart.sql:/docker-entrypoint-initdb.d/data_mart.sql
      - ./data/data:/var/lib/postgresql/data  # том для сохранения результат работы контейнера

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false